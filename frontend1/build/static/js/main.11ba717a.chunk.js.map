{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/layout/Search.js","components/layout/Header.js","components/layout/Footer.js","components/layout/MetaData.js","components/product/Product.js","components/layout/Loader.js","constants/productConstants.js","actions/productActions.js","components/Home.js","components/review/ListReviews.js","constants/cartConstants.js","actions/cartActions.js","components/product/ProductDetails.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","constants/orderConstants.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/order/OrderDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductsList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","components/route/ProtectedRoute.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","loadUser","dispatch","a","type","axios","get","data","payload","user","response","message","allUsers","users","clearErrors","Search","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","id","placeholder","onChange","target","value","aria-hidden","Header","alert","useAlert","useDispatch","useSelector","state","auth","loading","cartItems","cart","to","src","render","style","textDecoration","length","data-toggle","aria-haspopup","aria-expanded","alt","name","aria-labelledby","role","onClick","success","Footer","MetaData","title","Helmet","Product","product","col","images","url","_id","width","ratings","numOfReviews","price","Loader","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","getProductDetails","getAdminProducts","products","getProductReviews","reviews","Range","createSliderWithTooltip","Slider","Home","match","currentPage","setCurrentPage","setPrice","category","setCategory","rating","setRating","error","productsCount","resPerPage","filteredProductsCount","params","useEffect","link","getProducts","count","marks","1","1000","min","max","defaultValue","tipFormatter","tipProps","placement","visible","map","cursor","listStyleType","star","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListReviews","class","review","comment","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","setQuantity","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","data-target","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","data-dismiss","aria-label","reviewData","formData","FormData","set","config","headers","put","Cart","removeCartItemHandler","removeItemFromCart","item","height","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","htmlFor","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","post","getOrderDetails","allOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","newOrder","orderItems","orderInfo","parse","getItem","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","console","log","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","myOrders","orders","columns","label","field","sort","rows","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","OrderDetails","orderDetails","shippingDetails","isPaid","Login","location","setEmail","password","setPassword","isAuthenticated","redirect","search","split","login","Register","setUser","avatar","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","readAsDataURL","files","userData","encType","accept","Profile","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","for","ForgotPassword","forgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Sidebar","href","Dashboard","totalAmount","outOfStock","ProductsList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","Array","from","file","oldArray","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","deleteOrderHandler","deleteOrder","numofItems","ProcessOrder","setStatus","orderId","updateOrderHandler","orderData","updateOrder","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userId","ProductReviews","setProductId","productReviews","deleteReviewHandler","deleteReview","setReviews","ProtectedRoute","isAdmin","Component","component","rest","props","reducer","combineReducers","action","isItemExist","find","i","filter","initialState","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","stripeApiKey","setStripeApiKey","getStripApiKey","path","exact","loadStripe","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.11ba717a.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\n\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\n\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\n\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\n\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\n\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\n\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOGIN_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('http://localhost:4000/api/v1/login', { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Register user\nexport const register = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGISTER_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('http://localhost:4000/api/v1/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOAD_USER_REQUEST })\n\n        const { data } = await axios.get('http://localhost:4000/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update profile\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('http://localhost:4000/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update password\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('http://localhost:4000/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Forgot password\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('http://localhost:4000/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Reset password\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n\n        await axios.get('http://localhost:4000/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get all users\nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST })\n\n        const { data } = await axios.get('http://localhost:4000/api/v1/admin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data.users\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user - ADMIN\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get user details - ADMIN\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST })\n\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete user - ADMIN\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_USER_REQUEST })\n\n        const { data } = await axios.delete(`http://localhost:4000/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { useState } from 'react'\n\nconst Search = ({ history }) => {\n\n    const [keyword, setKeyword] = useState('');\n\n    const searchHandler = (e) => {\n        e.preventDefault()\n\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`)\n        } else {\n            history.push('/')\n        }\n    }\n\n    return (\n        <form onSubmit={searchHandler} >\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    id=\"search_field\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Product Name ...\"\n                    onChange={(e) => setKeyword(e.target.value)}\n                />\n                <div className=\"input-group-append\">\n                    <button id=\"search_btn\" className=\"btn\">\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Search\n","import React, { Fragment } from 'react'\nimport { Route, Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\n\nimport Search from './Search'\n\nimport '../../App.css'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully.')\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/logo.jpg\" />\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n\n                    {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                            <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={\"/images/default_avatar.jpg\"}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span>{user && user.name}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                )}\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                            </div>\n\n\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n\n\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\n\nconst Footer = () => {\n    return (\n        <Fragment>\n            <footer className=\"py-1\">\n                <p className=\"text-center mt-1\">\n                    Shopping Cart - 2019-2020, All Rights Reserved\n                </p>\n            </footer>\n        </Fragment>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst MetaData = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{`${title} - ShopIT`}</title>\n        </Helmet>\n    )\n}\n\nexport default MetaData\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">${product.price}</p>\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\"> </div>\n    )\n}\n\nexport default Loader\n","export const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\n\nexport const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\n\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\n\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\n\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\n\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\n\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `http://localhost:4000/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `http://localhost:4000/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`http://localhost:4000/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`http://localhost:4000/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`http://localhost:4000/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport Pagination from 'react-js-pagination'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nimport MetaData from './layout/MetaData'\nimport Product from './product/Product'\nimport Loader from './layout/Loader'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert';\nimport { getProducts } from '../actions/productActions'\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\n\nconst Home = ({ match }) => {\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 1000])\n    const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\n\n\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Buy Best Products Online'} />\n\n                    <h1 id=\"products_heading\">Latest Products</h1>\n\n                    <section id=\"products\" className=\"container mt-5\">\n                        <div className=\"row\">\n\n                            {keyword ? (\n                                <Fragment>\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\n                                        <div className=\"px-5\">\n                                            <Range\n                                                marks={{\n                                                    1: `$1`,\n                                                    1000: `$1000`\n                                                }}\n                                                min={1}\n                                                max={1000}\n                                                defaultValue={[1, 1000]}\n                                                tipFormatter={value => `$${value}`}\n                                                tipProps={{\n                                                    placement: \"top\",\n                                                    visible: true\n                                                }}\n                                                value={price}\n                                                onChange={price => setPrice(price)}\n                                            />\n\n                                            <hr className=\"my-5\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Categories\n                                                </h4>\n\n                                                <ul className=\"pl-0\">\n                                                    {categories.map(category => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={category}\n                                                            onClick={() => setCategory(category)}\n                                                        >\n                                                            {category}\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n\n                                            <hr className=\"my-3\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Ratings\n                                                </h4>\n\n                                                <ul className=\"pl-0\">\n                                                    {[5, 4, 3, 2, 1].map(star => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={star}\n                                                            onClick={() => setRating(star)}\n                                                        >\n                                                            <div className=\"rating-outer\">\n                                                                <div className=\"rating-inner\"\n                                                                    style={{\n                                                                        width: `${star * 20}%`\n                                                                    }}\n                                                                >\n                                                                </div>\n                                                            </div>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-6 col-md-9\">\n                                        <div className=\"row\">\n                                            {products.map(product => (\n                                                <Product key={product._id} product={product} col={4} />\n                                            ))}\n                                        </div>\n                                    </div>\n                                </Fragment>\n                            ) : (\n                                    products.map(product => (\n                                        <Product key={product._id} product={product} col={3} />\n                                    ))\n                                )}\n\n                        </div>\n                    </section>\n\n                    {resPerPage <= count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nconst ListReviews = ({ reviews }) => {\n    return (\n        <div class=\"reviews w-75\">\n            <h3>Other's Reviews:</h3>\n            <hr />\n            {reviews && reviews.map(review => (\n                <div key={review._id} class=\"review-card my-3\">\n                    <div class=\"rating-outer\">\n                        <div class=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\n                    </div>\n                    <p class=\"review_user\">by {review.name}</p>\n                    <p class=\"review_comment\">{review.comment}</p>\n\n                    <hr />\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default ListReviews\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART'\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO'","import axios from 'axios'\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\n\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\n    const { data } = await axios.get(`http://localhost:4000/api/v1/product/${id}`)\n\n    dispatch({\n        type: ADD_TO_CART,\n        payload: {\n            product: data.product._id,\n            name: data.product.name,\n            price: data.product.price,\n            image: data.product.images[0].url,\n            stock: data.product.stock,\n            quantity\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\n\n    dispatch({\n        type: REMOVE_ITEM_CART,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\nexport const saveShippingInfo = (data) => async (dispatch) => {\n\n    dispatch({\n        type: SAVE_SHIPPING_INFO,\n        payload: data\n    })\n\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\n\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport { Carousel } from 'react-bootstrap'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\nimport ListReviews from '../review/ListReviews'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions'\nimport { addItemToCart } from '../../actions/cartActions'\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductDetails = ({ match }) => {\n\n    const [quantity, setQuantity] = useState(1)\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, product } = useSelector(state => state.productDetails)\n    const { user } = useSelector(state => state.auth)\n    const { error: reviewError, success } = useSelector(state => state.newReview)\n\n    useEffect(() => {\n        dispatch(getProductDetails(match.params.id))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (reviewError) {\n            alert.error(reviewError);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            alert.success('Reivew posted successfully')\n            dispatch({ type: NEW_REVIEW_RESET })\n        }\n\n    }, [dispatch, alert, error, reviewError, match.params.id, success])\n\n    const addToCart = () => {\n        dispatch(addItemToCart(match.params.id, quantity));\n        alert.success('Item Added to Cart')\n    }\n\n    const increaseQty = () => {\n        const count = document.querySelector('.count')\n\n        if (count.valueAsNumber >= product.stock) return;\n\n        const qty = count.valueAsNumber + 1;\n        setQuantity(qty)\n    }\n\n    const decreaseQty = () => {\n\n        const count = document.querySelector('.count')\n\n        if (count.valueAsNumber <= 1) return;\n\n        const qty = count.valueAsNumber - 1;\n        setQuantity(qty)\n\n    }\n\n    function setUserRatings() {\n        const stars = document.querySelectorAll('.star');\n\n        stars.forEach((star, index) => {\n            star.starValue = index + 1;\n\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\n                star.addEventListener(e, showRatings);\n            })\n        })\n\n        function showRatings(e) {\n            stars.forEach((star, index) => {\n                if (e.type === 'click') {\n                    if (index < this.starValue) {\n                        star.classList.add('orange');\n\n                        setRating(this.starValue)\n                    } else {\n                        star.classList.remove('orange')\n                    }\n                }\n\n                if (e.type === 'mouseover') {\n                    if (index < this.starValue) {\n                        star.classList.add('yellow');\n                    } else {\n                        star.classList.remove('yellow')\n                    }\n                }\n\n                if (e.type === 'mouseout') {\n                    star.classList.remove('yellow')\n                }\n            })\n        }\n    }\n\n    const reviewHandler = () => {\n        const formData = new FormData();\n\n        formData.set('rating', rating);\n        formData.set('comment', comment);\n        formData.set('productId', match.params.id);\n\n        dispatch(newReview(formData));\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={product.name} />\n                    <div className=\"row d-flex justify-content-around\">\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\n                            <Carousel pause='hover'>\n                                {product.images && product.images.map(image => (\n                                    <Carousel.Item key={image.public_id}>\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\n                                    </Carousel.Item>\n                                ))}\n                            </Carousel>\n                        </div>\n\n                        <div className=\"col-12 col-lg-5 mt-5\">\n                            <h3>{product.name}</h3>\n                            <p id=\"product_id\">Product # {product._id}</p>\n\n                            <hr />\n\n                            <div className=\"rating-outer\">\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                            </div>\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n\n                            <hr />\n\n                            <p id=\"product_price\">${product.price}</p>\n                            <div className=\"stockCounter d-inline\">\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\n\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\n\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\n                            </div>\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\n\n                            <hr />\n\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\n\n                            <hr />\n\n                            <h4 className=\"mt-2\">Description:</h4>\n                            <p>{product.description}</p>\n                            <hr />\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\n\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\n                                Submit Your Review\n                            </button>\n                                :\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\n                            }\n\n\n                            <div className=\"row mt-2 mb-5\">\n                                <div className=\"rating w-50\">\n\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"modal-body\">\n\n                                                    <ul className=\"stars\" >\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                    </ul>\n\n                                                    <textarea\n                                                        name=\"review\"\n                                                        id=\"review\" className=\"form-control mt-3\"\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    >\n\n                                                    </textarea>\n\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {product.reviews && product.reviews.length > 0 && (\n                        <ListReviews reviews={product.reviews} />\n                    )}\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProductDetails\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\n\nconst Cart = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'} />\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\n                <Fragment>\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">${item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\n\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </Fragment>\n                            ))}\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Cart\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\n    return (\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\n\n            {shipping ? <Link to='shippping' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Shipping</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Shipping</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Confirm Order</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Confirm Order</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n            {payment ? <Link to='/payment' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Payment</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Payment</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n        </div>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { Fragment, useState } from 'react'\nimport { countries } from 'countries-list'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { saveShippingInfo } from '../../actions/cartActions'\n\nconst Shipping = ({ history }) => {\n\n    const countriesList = Object.values(countries)\n\n    const { shippingInfo } = useSelector(state => state.cart)\n\n    const [address, setAddress] = useState(shippingInfo.address)\n    const [city, setCity] = useState(shippingInfo.city)\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\n    const [country, setCountry] = useState(shippingInfo.country)\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\n        history.push('/confirm')\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Shipping Info'} />\n\n            <CheckoutSteps shipping />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Shipping Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address_field\">Address</label>\n                            <input\n                                type=\"text\"\n                                id=\"address_field\"\n                                className=\"form-control\"\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"city_field\">City</label>\n                            <input\n                                type=\"text\"\n                                id=\"city_field\"\n                                className=\"form-control\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone_field\">Phone No</label>\n                            <input\n                                type=\"phone\"\n                                id=\"phone_field\"\n                                className=\"form-control\"\n                                value={phoneNo}\n                                onChange={(e) => setPhoneNo(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\n                            <input\n                                type=\"number\"\n                                id=\"postal_code_field\"\n                                className=\"form-control\"\n                                value={postalCode}\n                                onChange={(e) => setPostalCode(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"country_field\">Country</label>\n                            <select\n                                id=\"country_field\"\n                                className=\"form-control\"\n                                value={country}\n                                onChange={(e) => setCountry(e.target.value)}\n                                required\n                            >\n\n                                {countriesList.map(country => (\n                                    <option key={country.name} value={country.name}>\n                                        {country.name}\n                                    </option>\n                                ))}\n\n                            </select>\n                        </div>\n\n                        <button\n                            id=\"shipping_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            CONTINUE\n                            </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Shipping\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useSelector } from 'react-redux'\n\nconst ConfirmOrder = ({ history }) => {\n\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\n    const { user } = useSelector(state => state.auth)\n\n    // Calculate Order Prices\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\n\n    const processToPayment = () => {\n        const data = {\n            itemsPrice: itemsPrice.toFixed(2),\n            shippingPrice,\n            taxPrice,\n            totalPrice\n        }\n\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\n        history.push('/payment')\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Confirm Order'} />\n\n            <CheckoutSteps shipping confirmOrder />\n\n            <div className=\"row d-flex justify-content-between\">\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n\n                    <h4 className=\"mb-3\">Shipping Info</h4>\n                    <p><b>Name:</b> {user && user.name}</p>\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\n\n                    <hr />\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\n\n                    {cartItems.map(item => (\n                        <Fragment>\n                            <hr />\n                            <div className=\"cart-item my-1\" key={item.product}>\n                                <div className=\"row\">\n                                    <div className=\"col-4 col-lg-2\">\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\n                                    </div>\n\n                                    <div className=\"col-5 col-lg-6\">\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </div>\n\n\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <hr />\n                        </Fragment>\n                    ))}\n\n\n\n                </div>\n\n                <div className=\"col-12 col-lg-3 my-4\">\n                    <div id=\"order_summary\">\n                        <h4>Order Summary</h4>\n                        <hr />\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\n\n                        <hr />\n\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\n\n                        <hr />\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\n                    </div>\n                </div>\n\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ConfirmOrder\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\n\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\n\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\n\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET'\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\n\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET'\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\n\nimport {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n\n        dispatch({ type: CREATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('http://localhost:4000/api/v1/order/new', order, config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get curretly logged in user orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: MY_ORDERS_REQUEST });\n\n        const { data } = await axios.get('http://localhost:4000/api/v1/orders/me')\n\n        dispatch({\n            type: MY_ORDERS_SUCCESS,\n            payload: data.orders\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get order details\nexport const getOrderDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ORDER_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/order/${id}`)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data.order\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get all orders - ADMIN\nexport const allOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_ORDERS_REQUEST });\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/admin/orders`)\n\n        dispatch({\n            type: ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// update order\nexport const updateOrder = (id, orderData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/admin/order/${id}`, orderData, config)\n\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete order\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_ORDER_REQUEST })\n\n        const { data } = await axios.delete(`http://localhost:4000/api/v1/admin/order/${id}`)\n\n        dispatch({\n            type: DELETE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createOrder, clearErrors } from '../../actions/orderActions'\n\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\n\nimport axios from 'axios'\n\nconst options = {\n    style: {\n        base: {\n            fontSize: '16px'\n        },\n        invalid: {\n            color: '#9e2146'\n        }\n    }\n}\n\nconst Payment = ({ history }) => {\n\n    const alert = useAlert();\n    const stripe = useStripe();\n    const elements = useElements();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth)\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\n    const { error } = useSelector(state => state.newOrder)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error])\n\n    const order = {\n        orderItems: cartItems,\n        shippingInfo\n    }\n\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n    if (orderInfo) {\n        order.itemsPrice = orderInfo.itemsPrice\n        order.shippingPrice = orderInfo.shippingPrice\n        order.taxPrice = orderInfo.taxPrice\n        order.totalPrice = orderInfo.totalPrice\n    }\n\n    const paymentData = {\n        amount: Math.round(orderInfo.totalPrice * 100)\n    }\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n\n        document.querySelector('#pay_btn').disabled = true;\n\n        let res;\n        try {\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            res = await axios.post('http://localhost:4000/api/v1/products/api/v1/payment/process', paymentData, config)\n\n            const clientSecret = res.data.client_secret;\n\n            console.log(clientSecret);\n\n            if (!stripe || !elements) {\n                return;\n            }\n\n            const result = await stripe.confirmCardPayment(clientSecret, {\n                payment_method: {\n                    card: elements.getElement(CardNumberElement),\n                    billing_details: {\n                        name: user.name,\n                        email: user.email\n                    }\n                }\n            });\n\n            if (result.error) {\n                alert.error(result.error.message);\n                document.querySelector('#pay_btn').disabled = false;\n            } else {\n\n                // The payment is processed or not\n                if (result.paymentIntent.status === 'succeeded') {\n\n                    order.paymentInfo = {\n                        id: result.paymentIntent.id,\n                        status: result.paymentIntent.status\n                    }\n\n                    dispatch(createOrder(order))\n\n                    history.push('/success')\n                } else {\n                    alert.error('There is some issue while payment processing')\n                }\n            }\n\n\n        } catch (error) {\n            document.querySelector('#pay_btn').disabled = false;\n            alert.error(error.response.data.message)\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Payment'} />\n\n            <CheckoutSteps shipping confirmOrder payment />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Card Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_num_field\">Card Number</label>\n                            <CardNumberElement\n                                type=\"text\"\n                                id=\"card_num_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\n                            <CardExpiryElement\n                                type=\"text\"\n                                id=\"card_exp_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\n                            <CardCvcElement\n                                type=\"text\"\n                                id=\"card_cvc_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n\n                        <button\n                            id=\"pay_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            Pay {` - ${orderInfo && orderInfo.totalPrice}`}\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Payment\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport MetaData from '../layout/MetaData'\n\nconst OrderSuccess = () => {\n    return (\n        <Fragment>\n\n            <MetaData title={'Order Success'} />\n\n            <div className=\"row justify-content-center\">\n                <div className=\"col-6 mt-5 text-center\">\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\n\n                    <h2>Your Order has been placed successfully.</h2>\n\n                    <Link to=\"/orders/me\">Go to Orders</Link>\n                </div>\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrderSuccess\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { myOrders, clearErrors } from '../../actions/orderActions'\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n\n    useEffect(() => {\n        dispatch(myOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Num of Items',\n                    field: 'numOfItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'My Orders'} />\n\n            <h1 className=\"my-5\">My Orders</h1>\n\n            {loading ? <Loader /> : (\n                <MDBDataTable\n                    data={setOrders()}\n                    className=\"px-3\"\n                    bordered\n                    striped\n                    hover\n                />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ListOrders\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\n\nconst OrderDetails = ({ match }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n\n    useEffect(() => {\n        dispatch(getOrderDetails(match.params.id));\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error, match.params.id])\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n\n    return (\n        <Fragment>\n            <MetaData title={'Order Details'} />\n\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\n\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\n\n                            <h4 className=\"mb-4\">Shipping Info</h4>\n                            <p><b>Name:</b> {user && user.name}</p>\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                            <p><b>Amount:</b> ${totalPrice}</p>\n\n                            <hr />\n\n                            <h4 className=\"my-4\">Payment</h4>\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n\n                            <h4 className=\"my-4\">Order Status:</h4>\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n\n\n                            <h4 className=\"my-4\">Order Items:</h4>\n\n                            <hr />\n                            <div className=\"cart-item my-1\">\n                                {orderItems && orderItems.map(item => (\n                                    <div key={item.product} className=\"row my-5\">\n                                        <div className=\"col-4 col-lg-2\">\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                        </div>\n\n                                        <div className=\"col-5 col-lg-5\">\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                        </div>\n\n\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                            <p>${item.price}</p>\n                                        </div>\n\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                            <p>{item.quantity} Piece(s)</p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <hr />\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default OrderDetails\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register, clearErrors } from '../../actions/userActions'\n\nconst Register = ({ history }) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n    })\n\n    const { name, email, password } = user;\n\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push('/')\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('avatar', avatar);\n\n        dispatch(register(formData))\n    }\n\n    const onChange = e => {\n        if (e.target.name === 'avatar') {\n\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n\n        } else {\n            setUser({ ...user, [e.target.name]: e.target.value })\n        }\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Register User'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                name='password'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"iamges/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Register\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nconst Profile = () => {\n\n    const { user, loading } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Your Profile'} />\n\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\n                    <div className=\"row justify-content-around mt-5 user-info\">\n                        <div className=\"col-12 col-md-3\">\n                        <figure className='avatar avatar-profile'>\n                                <img className=\"rounded-circle img-fluid\" src={\"/images/default_avatar.jpg\"} alt={user.name} />\n                            </figure>\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                                Edit Profile\n                            </Link>\n                        </div>\n\n                        <div className=\"col-12 col-md-5\">\n                            <h4>Full Name</h4>\n                            <p>{user.name}</p>\n\n                            <h4>Email Address</h4>\n                            <p>{user.email}</p>\n\n                            <h4>Joined On</h4>\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\n\n                            {user.role !== 'admin' && (\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\n                                    My Orders\n                                </Link>\n                            )}\n\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                                Change Password\n                            </Link>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\n\nconst UpdatePassword = ({ history }) => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully')\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n\n        dispatch(updatePassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label for=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e) => setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label for=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (message) {\n            alert.success(message)\n        }\n\n    }, [dispatch, alert, error, message])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false} >\n                            Send Email\n                    </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetPassword, clearErrors } from '../../actions/userActions'\n\nconst NewPassword = ({ history, match }) => {\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, success } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Password updated successfully')\n            history.push('/login')\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(match.params.token, formData))\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'New Password Reset'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">New Password</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirm_password_field\"\n                                className=\"form-control\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"new_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\">\n                            Set Password\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Sidebar = () => {\n    return (\n        <div className=\"sidebar-wrapper\">\n            <nav id=\"sidebar\">\n                <ul className=\"list-unstyled components\">\n                    <li>\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\n                    </li>\n\n                    <li>\n                        <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\n                            className=\"fa fa-product-hunt\"></i> Products</a>\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\n                            <li>\n                                <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\n                            </li>\n\n                            <li>\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\n                            </li>\n                        </ul>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\n                    </li>\n\n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getAdminProducts } from '../../actions/productActions'\nimport { allOrders } from '../../actions/orderActions'\nimport { allUsers } from '../../actions/userActions'\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n\n    const { products } = useSelector(state => state.products)\n    const { users } = useSelector(state => state.allUsers)\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\n\n    let outOfStock = 0;\n    products.forEach(product => {\n        if (product.stock === 0) {\n            outOfStock += 1;\n        }\n    })\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n        dispatch(allOrders())\n        dispatch(allUsers())\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <h1 className=\"my-4\">Dashboard</h1>\n\n                    {loading ? <Loader /> : (\n                        <Fragment>\n                            <MetaData title={'Admin Dashboard'} />\n\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Total Amount<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Fragment>\n                    )}\n\n                </div>\n            </div>\n\n        </Fragment >\n    )\n}\n\nexport default Dashboard\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst ProductsList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(state => state.products);\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Product deleted successfully');\n            history.push('/admin/products');\n            dispatch({ type: DELETE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\n\n    const setProducts = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Price',\n                    field: 'price',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Stock',\n                    field: 'stock',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        products.forEach(product => {\n            data.rows.push({\n                id: product._id,\n                name: product.name,\n                price: `$${product.price}`,\n                stock: product.stock,\n                actions: <Fragment>\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All Products'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Products</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setProducts()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductsList\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst NewProduct = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully');\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">New Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                     </label>\n                                    </div>\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst UpdateProduct = ({ match, history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n\n    const [oldImages, setOldImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\n\n    const productId = match.params.id;\n\n    useEffect(() => {\n\n        if (product && product._id !== productId) {\n            dispatch(getProductDetails(productId));\n        } else {\n            setName(product.name);\n            setPrice(product.price);\n            setDescription(product.description);\n            setCategory(product.category);\n            setSeller(product.seller);\n            setStock(product.stock)\n            setOldImages(product.images)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated successfully');\n            dispatch({ type: UPDATE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(updateProduct(product._id, formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n        setOldImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">Update Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                 </label>\n                                    </div>\n\n                                    {oldImages && oldImages.map(img => (\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    UPDATE\n                            </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst OrdersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.allOrders);\n    const { isDeleted } = useSelector(state => state.order)\n\n    useEffect(() => {\n        dispatch(allOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Order deleted successfully');\n            history.push('/admin/orders');\n            dispatch({ type: DELETE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id))\n    }\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'No of Items',\n                    field: 'numofItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numofItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions: <Fragment>\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Orders'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Orders</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setOrders()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrdersList\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst ProcessOrder = ({ match }) => {\n\n    const [status, setStatus] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n    const { error, isUpdated } = useSelector(state => state.order)\n\n    const orderId = match.params.id;\n\n    useEffect(() => {\n\n        dispatch(getOrderDetails(orderId))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({ type: UPDATE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, orderId])\n\n\n    const updateOrderHandler = (id) => {\n\n        const formData = new FormData();\n        formData.set('status', status);\n\n        dispatch(updateOrder(id, formData))\n    }\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n\n    return (\n        <Fragment>\n            <MetaData title={`Process Order # ${order && order._id}`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        {loading ? <Loader /> : (\n                            <div className=\"row d-flex justify-content-around\">\n                                <div className=\"col-12 col-lg-7 order-details\">\n\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\n\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\n                                    <p><b>Name:</b> {user && user.name}</p>\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                                    <p><b>Amount:</b> ${totalPrice}</p>\n\n                                    <hr />\n\n                                    <h4 className=\"my-4\">Payment</h4>\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n                                    <h4 className=\"my-4\">Stripe ID</h4>\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\n\n                                    <h4 className=\"my-4\">Order Status:</h4>\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n\n\n\n                                    <h4 className=\"my-4\">Order Items:</h4>\n\n                                    <hr />\n                                    <div className=\"cart-item my-1\">\n                                        {orderItems && orderItems.map(item => (\n                                            <div key={item.product} className=\"row my-5\">\n                                                <div className=\"col-4 col-lg-2\">\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                                </div>\n\n                                                <div className=\"col-5 col-lg-5\">\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                </div>\n\n\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                    <p>${item.price}</p>\n                                                </div>\n\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                    <p>{item.quantity} Piece(s)</p>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <hr />\n                                </div>\n\n                                <div className=\"col-12 col-lg-3 mt-5\">\n                                    <h4 className=\"my-4\">Status</h4>\n\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"form-control\"\n                                            name='status'\n                                            value={status}\n                                            onChange={(e) => setStatus(e.target.value)}\n                                        >\n                                            <option value=\"Processing\">Processing</option>\n                                            <option value=\"Shipped\">Shipped</option>\n                                            <option value=\"Delivered\">Delivered</option>\n                                        </select>\n                                    </div>\n\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\n                                        Update Status\n                                    </button>\n                                </div>\n\n                            </div>\n                        )}\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProcessOrder\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\n\nconst UsersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    const { isDeleted } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('User deleted successfully');\n            history.push('/admin/users');\n            dispatch({ type: DELETE_USER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'User ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        users.forEach(user => {\n            data.rows.push({\n                id: user._id,\n                name: user.name,\n                email: user.email,\n                role: user.role,\n\n                actions: <Fragment>\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Users'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Users</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setUsers()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\n\nconst UpdateUser = ({ history, match }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [role, setRole] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated } = useSelector(state => state.user);\n    const { user } = useSelector(state => state.userDetails)\n\n    const userId = match.params.id;\n\n    useEffect(() => {\n\n        console.log(user && user._id !== userId);\n        if (user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setRole(user.role)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n\n            history.push('/admin/users')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated, userId, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData))\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={`Update User`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"name\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        name='name'\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        name='email'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"role_field\">Role</label>\n\n                                    <select\n                                        id=\"role_field\"\n                                        className=\"form-control\"\n                                        name='role'\n                                        value={role}\n                                        onChange={(e) => setRole(e.target.value)}\n                                    >\n                                        <option value=\"user\">user</option>\n                                        <option value=\"admin\">admin</option>\n                                    </select>\n                                </div>\n\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateUser\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","import React, { Fragment } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {loading === false && (\n                <Route\n                    {...rest}\n                    render={props => {\n                        if (isAuthenticated === false) {\n                            return <Redirect to='/login' />\n                        }\n\n                        if (isAdmin === true && user.role !== 'admin') {\n                            return <Redirect to=\"/\" />\n                        }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProtectedRoute\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    products: productsReducer,\n    productDetails: productDetailsReducer,\n    newProduct: newProductReducer,\n    product: productReducer,\n    productReviews: productReviewsReducer,\n    review: reviewReducer,\n    auth: authReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n    userDetails: userDetailsReducer,\n    forgotPassword: forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder: newOrderReducer,\n    myOrders: myOrdersReducer,\n    allOrders: allOrdersReducer,\n    orderDetails: orderDetailsReducer,\n    order: orderReducer,\n    newReview: newReviewReducer\n})\n\n\nlet initialState = {\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n            ? JSON.parse(localStorage.getItem('cartItems'))\n            : [],\n        shippingInfo: localStorage.getItem('shippingInfo')\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\n            : {}\n    }\n}\n\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\n\nexport default store;","import {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_RESET,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_RESET,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_RESET,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_RESET,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const productsReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case ALL_PRODUCTS_REQUEST:\n        case ADMIN_PRODUCTS_REQUEST:\n            return {\n                loading: true,\n                products: []\n            }\n\n        case ALL_PRODUCTS_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                productsCount: action.payload.productsCount,\n                resPerPage: action.payload.resPerPage,\n                filteredProductsCount: action.payload.filteredProductsCount\n            }\n\n        case ADMIN_PRODUCTS_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload\n            }\n\n        case ALL_PRODUCTS_FAIL:\n        case ADMIN_PRODUCTS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const newProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n\n        case NEW_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case NEW_PRODUCT_SUCCESS:\n            return {\n                loading: false,\n                success: action.payload.success,\n                product: action.payload.product\n            }\n\n        case NEW_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_PRODUCT_RESET:\n            return {\n                ...state,\n                success: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const productReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case DELETE_PRODUCT_REQUEST:\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n\n        case DELETE_PRODUCT_FAIL:\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_PRODUCT_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_PRODUCT_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                product: action.payload\n            }\n\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const newReviewReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case NEW_REVIEW_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case NEW_REVIEW_SUCCESS:\n            return {\n                loading: false,\n                success: action.payload\n            }\n\n        case NEW_REVIEW_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_REVIEW_RESET:\n            return {\n                ...state,\n                success: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const productReviewsReducer = (state = { review: [] }, action) => {\n    switch (action.type) {\n\n        case GET_REVIEWS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case GET_REVIEWS_SUCCESS:\n            return {\n                loading: false,\n                reviews: action.payload\n            }\n\n        case GET_REVIEWS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const reviewReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case DELETE_REVIEW_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case DELETE_REVIEW_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case DELETE_REVIEW_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_REVIEW_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_RESET,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\nexport const authReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true,\n                isAuthenticated: false,\n            }\n\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_USER_REQUEST:\n        case DELETE_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_USER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_USER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n        case DELETE_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const forgotPasswordReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case FORGOT_PASSWORD_REQUEST:\n        case NEW_PASSWORD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n\n        case FORGOT_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                message: action.payload\n            }\n\n        case NEW_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                success: action.payload\n            }\n\n        case FORGOT_PASSWORD_FAIL:\n        case NEW_PASSWORD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_USERS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case ALL_USERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                users: action.payload\n            }\n\n        case ALL_USERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload\n            }\n\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}","import { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\n    switch (action.type) {\n\n        case ADD_TO_CART:\n            const item = action.payload;\n\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\n\n            if (isItemExist) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case REMOVE_ITEM_CART:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\n            }\n\n\n        case SAVE_SHIPPING_INFO:\n            return {\n                ...state,\n                shippingInfo: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}","import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_RESET,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_RESET,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const newOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case CREATE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case CREATE_ORDER_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case CREATE_ORDER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case MY_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case MY_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case MY_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n\n        case ORDER_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ALL_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                totalAmount: action.payload.totalAmount\n            }\n\n        case ALL_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_ORDER_REQUEST:\n        case DELETE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_ORDER_FAIL:\n        case DELETE_ORDER_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case UPDATE_ORDER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_ORDER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/layout/Header'\nimport Footer from './components/layout/Footer'\n\nimport Home from './components/Home'\nimport ProductDetails from './components/product/ProductDetails'\n\n// Cart Imports\nimport Cart from './components/cart/Cart'\nimport Shipping from './components/cart/Shipping'\nimport ConfirmOrder from './components/cart/ConfirmOrder'\nimport Payment from './components/cart/Payment'\nimport OrderSuccess from './components/cart/OrderSuccess'\n\n// Order Imports\nimport ListOrders from './components/order/ListOrders'\nimport OrderDetails from './components/order/OrderDetails'\n\n// Auth or User imports\nimport Login from './components/user/Login'\nimport Register from './components/user/Register'\nimport Profile from './components/user/Profile'\nimport UpdateProfile from './components/user/UpdateProfile'\nimport UpdatePassword from './components/user/UpdatePassword'\nimport ForgotPassword from './components/user/ForgotPassword'\nimport NewPassword from './components/user/NewPassword'\n\n// Admin Imports\nimport Dashboard from './components/admin/Dashboard'\nimport ProductsList from './components/admin/ProductsList'\nimport NewProduct from './components/admin/NewProduct'\nimport UpdateProduct from './components/admin/UpdateProduct'\nimport OrdersList from './components/admin/OrdersList'\nimport ProcessOrder from './components/admin/ProcessOrder'\nimport UsersList from './components/admin/UsersList'\nimport UpdateUser from './components/admin/UpdateUser'\nimport ProductReviews from './components/admin/ProductReviews'\n\n\nimport ProtectedRoute from './components/route/ProtectedRoute'\nimport { loadUser } from './actions/userActions'\nimport { useSelector } from 'react-redux'\nimport store from './store'\nimport axios from 'axios'\n\n// Payment\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('http://localhost:4000/api/v1/stripeapi');\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey();\n\n  }, [])\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container container-fluid\">\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/search/:keyword\" component={Home} />\n          <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n          <Route path=\"/cart\" component={Cart} exact />\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n          {stripeApiKey &&\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements>\n          }\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n\n          <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n        </div>\n\n        <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n        <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} exact />\n        <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n        <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n\n        {!loading && (!isAuthenticated || user.role !== 'admin') && (\n          <Footer />\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <Provider store={store} >\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}